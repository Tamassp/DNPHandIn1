@page "/FamilyOverview"
@using HandIn1Family.Data
@using System.Collections
@using Models
@inject IAdultData AdultData;

<h3>Family Overview</h3>

<p>
     Filter by User Id: <input type="number" @oninput="@((arg) => Filter(arg))" style="width:50px"/>

</p>

@if (adultsToShow == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else if (!adultsToShow.Any())
{
    <p>
        <em>The list of the adults is empty</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Id</th>
            <th>FirstName</th>
            <th>LastName</th>
            <th>HairColor</th>
            @*<th>EyeColor</th>
            <th>Age</th>
            <th>Weight</th>
            <th>Height</th>
            <th>Sex</th>*@
            <th>Remove</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in adultsToShow)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.FirstName</td>
                <td>@item.LastName</td>
                <td>@item.HairColor</td>
                @*<td>@item.EyeColor</td>
                <td>@item.Age</td>
                <td>@item.Weight</td>
                <td>@item.Height</td>
                <td>@item.Sex</td>*@
                <td>
                    <button @onclick="@(() => RemoveAdult(item.Id))">
                        <i class="oi oi-trash" style="color:red"/>
                    </button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}


@code {
    private IList<Adult> adults;
    private IList<Adult> adultsToShow;
    
    protected override async Task OnInitializedAsync()
    {
        adults = AdultData.GetAdults();
        adultsToShow = adults;
    //Console.WriteLine(adults);
    }

    private void RemoveAdult(int adultId)
    {
        Adult adultToRemove = adults.First(a => a.Id == adultId);
        AdultData.RemoveAdult(adultId);
        adults.Remove(adultToRemove);
        adultsToShow.Remove(adultToRemove);
    }

    
    private void Filter(ChangeEventArgs changeEventArgs)
    {
        int? filterById = null;
        try
        {
            filterById = int.Parse(changeEventArgs.Value.ToString());
        }
        catch (Exception e)
        {
            
        }
        if (filterById != null)
        {
            adultsToShow = adults.Where(a => a.Id == filterById).ToList();
        }
        else
        {
            adultsToShow = adults;
        }
    }

}